{"ast":null,"code":"var _jsxFileName = \"/workspaces/test_fullstackopen_Dominik_H/part2/countriesdata/src/components/SingleCountry.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Komponent SingleCountry przyjmuje dane przefiltrowane dla jednego kraju\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleCountry(_ref) {\n  _s();\n\n  let {\n    filteredData\n  } = _ref;\n  const [weather, setWeather] = useState([]); // Efekt uboczny używający API pogody do pobrania informacji o aktualnej pogodzie dla stolicy kraju\n\n  useEffect(() => {\n    axios(`http://api.openweathermap.org/geo/1.0/direct?q=${filteredData[0].capital}&appid=${process.env.REACT_APP_WEATHER}`).then(response => {\n      const lat = response.data[0].lat;\n      const lon = response.data[0].lon; // Drugie zapytanie do API pogody na podstawie współrzędnych geograficznych kraju\n\n      return axios(`http://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely,hourly,alerts&appid=${process.env.REACT_APP_WEATHER}`);\n    }).then(response => {\n      // Ustawienie stanu weather na dane pogodowe z odpowiedzi\n      return setWeather([response.data]);\n    }).catch(err => {\n      // Obsługa błędów\n      console.log(\"BŁĄD: \", err);\n    });\n  }, [filteredData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: filteredData[0].name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Stolica: \", filteredData[0].capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Obszar: \", filteredData[0].area]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"J\\u0119zyki:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(filteredData[0].languages).map(arr => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: arr[1]\n          }, arr[0], false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: filteredData[0].flags.png,\n      alt: \"flaga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), weather.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Pogoda w \", filteredData[0].capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Temperatura \", weather[0].current.temp, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weather[0].current.weather[0].icon}@4x.png`,\n          alt: \"ikona-pogody\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Wiatr \", weather[0].current.wind_speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n} // Eksportowanie komponentu SingleCountry jako domyślnego\n\n\n_s(SingleCountry, \"Mos131Hxz3VSc+jVtInwzSzjUQ4=\");\n\n_c = SingleCountry;\nexport default SingleCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCountry\");","map":{"version":3,"names":["useState","useEffect","axios","SingleCountry","filteredData","weather","setWeather","capital","process","env","REACT_APP_WEATHER","then","response","lat","data","lon","catch","err","console","log","name","common","area","Object","entries","languages","map","arr","flags","png","length","current","temp","icon","wind_speed"],"sources":["/workspaces/test_fullstackopen_Dominik_H/part2/countriesdata/src/components/SingleCountry.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Komponent SingleCountry przyjmuje dane przefiltrowane dla jednego kraju\nfunction SingleCountry({ filteredData }) {\n\tconst [weather, setWeather] = useState([]);\n\n\t// Efekt uboczny używający API pogody do pobrania informacji o aktualnej pogodzie dla stolicy kraju\n\tuseEffect(() => {\n\t\taxios(\n\t\t\t`http://api.openweathermap.org/geo/1.0/direct?q=${filteredData[0].capital}&appid=${process.env.REACT_APP_WEATHER}`\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tconst lat = response.data[0].lat;\n\t\t\t\tconst lon = response.data[0].lon;\n\n\t\t\t\t// Drugie zapytanie do API pogody na podstawie współrzędnych geograficznych kraju\n\t\t\t\treturn axios(\n\t\t\t\t\t`http://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely,hourly,alerts&appid=${process.env.REACT_APP_WEATHER}`\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t// Ustawienie stanu weather na dane pogodowe z odpowiedzi\n\t\t\t\treturn setWeather([response.data]);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// Obsługa błędów\n\t\t\t\tconsole.log(\"BŁĄD: \", err);\n\t\t\t});\n\t}, [filteredData]);\n\n\treturn (\n\t\t<>\n\t\t\t{/* Wyświetlenie nazwy kraju */}\n\t\t\t<h2>{filteredData[0].name.common}</h2>\n\n\t\t\t{/* Informacje o stolicy kraju */}\n\t\t\t<div>Stolica: {filteredData[0].capital}</div>\n\n\t\t\t{/* Informacje o obszarze kraju */}\n\t\t\t<div>Obszar: {filteredData[0].area}</div>\n\n\t\t\t{/* Informacje o językach kraju */}\n\t\t\t<div>\n\t\t\t\tJęzyki:\n\t\t\t\t<ul>\n\t\t\t\t\t{Object.entries(filteredData[0].languages).map((arr) => {\n\t\t\t\t\t\treturn <li key={arr[0]}>{arr[1]}</li>;\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t{/* Wyświetlenie flagi kraju */}\n\t\t\t<img src={filteredData[0].flags.png} alt=\"flaga\" />\n\n\t\t\t{/* Warunek sprawdzający, czy dane pogodowe są dostępne */}\n\t\t\t{weather.length > 0 && (\n\t\t\t\t<div>\n\t\t\t\t\t{/* Wyświetlenie informacji o pogodzie */}\n\t\t\t\t\t<h3>Pogoda w {filteredData[0].capital}</h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tTemperatura {weather[0].current.temp}\n\t\t\t\t\t\t<span> &#176;C</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* Wyświetlenie ikony pogodowej */}\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${weather[0].current.weather[0].icon}@4x.png`}\n\t\t\t\t\t\t\talt=\"ikona-pogody\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>Wiatr {weather[0].current.wind_speed} m/s</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\n// Eksportowanie komponentu SingleCountry jako domyślnego\nexport default SingleCountry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}