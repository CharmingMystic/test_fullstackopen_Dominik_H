{"ast":null,"code":"var _jsxFileName = \"/workspaces/test_fullstackopen_Dominik_H/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    name,\n    handleClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleClick(prevState => prevState + 1),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [props.name, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  const total = props.values.reduce((accum, prev) => accum + prev, 0);\n  const positivePercentage = 100 * props.values[0] / total;\n\n  if (props.values[0] === 0 && props.values[1] === 0 && props.values[2] === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), \"No Feedback Given\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"Good\",\n          value: props.values[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"Neutral\",\n          value: props.values[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"Bad\",\n          value: props.values[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"All\",\n          value: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"Average\",\n          value: total / 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          name: \"Positive\",\n          value: `${positivePercentage}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Good\",\n      handleClick: setGood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Neutral\",\n      handleClick: setNeutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Bad\",\n      handleClick: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      values: [good, neutral, bad]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","name","handleClick","prevState","StatisticLine","props","value","Statistics","total","values","reduce","accum","prev","positivePercentage","App","good","setGood","neutral","setNeutral","bad","setBad"],"sources":["/workspaces/test_fullstackopen_Dominik_H/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Button = ({ name, handleClick }) => {\n\treturn (\n\t\t<button onClick={() => handleClick((prevState) => prevState + 1)}>\n\t\t\t{name}\n\t\t</button>\n\t);\n};\n\nconst StatisticLine = (props) => {\n\treturn (\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<strong>{props.name}: </strong>\n\t\t\t</td>\n\t\t\t<td>{props.value}</td>\n\t\t</tr>\n\t);\n};\n\nconst Statistics = (props) => {\n\tconst total = props.values.reduce((accum, prev) => accum + prev, 0);\n\tconst positivePercentage = (100 * props.values[0]) / total;\n\n\tif (props.values[0] === 0 && props.values[1] === 0 && props.values[2] === 0) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Statistics</h2>\n\t\t\t\tNo Feedback Given\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Statistics</h2>\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<StatisticLine name=\"Good\" value={props.values[0]} />\n\t\t\t\t\t<StatisticLine name=\"Neutral\" value={props.values[1]} />\n\t\t\t\t\t<StatisticLine name=\"Bad\" value={props.values[2]} />\n\t\t\t\t\t<StatisticLine name=\"All\" value={total} />\n\t\t\t\t\t<StatisticLine name=\"Average\" value={total / 3} />\n\t\t\t\t\t<StatisticLine name=\"Positive\" value={`${positivePercentage}%`} />\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\tconst [good, setGood] = useState(0);\n\tconst [neutral, setNeutral] = useState(0);\n\tconst [bad, setBad] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Give Feedback</h2>\n\t\t\t<Button name=\"Good\" handleClick={setGood} />\n\t\t\t<Button name=\"Neutral\" handleClick={setNeutral} />\n\t\t\t<Button name=\"Bad\" handleClick={setBad} />\n\t\t\t<Statistics values={[good, neutral, bad]} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}